{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["\r\n\r\nlet Rx = require('rx');\r\nlet _ = require('lodash');\r\nlet Observable = Rx.Observable;\r\nlet extend = require('extend');\r\nlet clc = require('cli-color');\r\nlet columnify = require('columnify');\r\n\r\nlet arrayize = function(args) {\r\n    return args.length === 1 && args[0] instanceof Array ?\r\n        args[0] :\r\n        Array.prototype.slice.call(args);\r\n};\r\n\r\nmodule.exports = (function() {\r\n\r\n    // For now, just choosing the smallest value possible that ensures the test scheduler beings reporting time at a 0-based value\r\n    const DEFAULT_START_TIME_MS = 9;\r\n    const DEFAULT_TIME_STEP_MS = 1;\r\n    const MAX_CHARS = 10000;\r\n    const MAX_SEQUENCE_TIME = MAX_CHARS * DEFAULT_TIME_STEP_MS;\r\n    // Wraps the resulting observable in a container so that we can easily chain operations\r\n    let _wrap = function(seqStr) {\r\n        let self = this;\r\n        let obj = () => self.toString.bind(self);\r\n\r\n        obj._seqStr = seqStr;\r\n        obj._self = self;\r\n\r\n        // Store methods so that we can easily support chaining\r\n        for (let prop in self) {\r\n            if (self.hasOwnProperty(prop)) {\r\n                if ((typeof self[prop]) === 'function') {\r\n                    obj[prop] = self[prop].bind(obj);\r\n                }\r\n                else {\r\n                    obj[prop] = self[prop];\r\n                }\r\n            }\r\n        }\r\n\r\n        return obj;\r\n    };\r\n\r\n    let onNext = Rx.ReactiveTest.onNext;\r\n    let onError = Rx.ReactiveTest.onError;\r\n    let onCompleted = Rx.ReactiveTest.onCompleted;\r\n\r\n    let strToGroupedList = function(str) {\r\n        let tokens = str.split('');\r\n        let listOfSets = [];\r\n        let numNestedSets = 0;\r\n        let currExpression = '';\r\n        tokens.forEach(function(token) {\r\n            switch(token) {\r\n                case '(':\r\n                case '{':\r\n                    if (++numNestedSets === 1) {\r\n                        currExpression = '';\r\n                    }\r\n                    break;\r\n                case ')':\r\n                case '}':\r\n                    if (--numNestedSets === 0) {\r\n                        listOfSets.push(currExpression + token);\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (numNestedSets === 0) {\r\n                        listOfSets.push(token);\r\n                    }\r\n                    break;\r\n            }\r\n            if (numNestedSets > 0) {\r\n                currExpression += token;\r\n            }\r\n        });\r\n\r\n        if (numNestedSets !== 0) {\r\n            throw new Error('Rx string has unbalanced parens! => ' + str);\r\n        }\r\n\r\n        return listOfSets;\r\n    };\r\n\r\n    let strToObs = function(str, scheduler, props) {\r\n        str = str || '';\r\n        if (str.indexOf('|') === -1) {\r\n            str = str + '|';\r\n        }\r\n        let listOfSets = strToGroupedList(str);\r\n        let obsList = [];\r\n        let obs;\r\n        let delay = 0;\r\n\r\n        listOfSets.forEach(function(token) {\r\n            let skipMe = false;\r\n            switch(token) {\r\n                case ' ':\r\n                case '-':\r\n                case '.':\r\n                    delay += DEFAULT_TIME_STEP_MS;\r\n                    skipMe = true;\r\n                    break;\r\n                case '!':\r\n                    delay += DEFAULT_TIME_STEP_MS;\r\n                    obs = onError(delay, '!');\r\n                    break;\r\n                case '|':\r\n                    obs = onCompleted(delay);\r\n                    break;\r\n                default:\r\n                    delay += DEFAULT_TIME_STEP_MS;\r\n                    if (token.charAt(0) === '{') {\r\n                        token = JSON.parse(token);\r\n                    }\r\n                    obs = onNext(delay, token);\r\n                    break;\r\n            }\r\n\r\n            if (!skipMe) {\r\n                obsList.push(obs);\r\n            }\r\n        });\r\n\r\n        return scheduler.createColdObservable( obsList );\r\n    };\r\n\r\n    let obsToStr = function(obs, scheduler, props) {\r\n        let output = '';\r\n        let results = scheduler.startWithTiming(function () {\r\n            return obs;\r\n        },\r\n            //Use with startWithTiming\r\n            0,\r\n            DEFAULT_START_TIME_MS,\r\n            MAX_SEQUENCE_TIME\r\n        );\r\n        let lastTime = DEFAULT_START_TIME_MS;\r\n        let messages = results.messages;\r\n\r\n        if (props.mostRecentOnly) {\r\n            messages = _.uniq(messages.reverse(), function(message) {\r\n                if (!message.value.value) {\r\n                    return null;\r\n                }\r\n                return message.time;\r\n            }).reverse();\r\n        }\r\n\r\n        let lastCharIndex = messages.length - 1;\r\n        messages.forEach(function(message, idx) {\r\n            let messageValue = message && message.value;\r\n            let value = messageValue.value;\r\n            let kind = messageValue.kind;\r\n\r\n            if (kind === 'C' && (idx === lastCharIndex)) {\r\n                // Hack to ensure onComplete gets positioned in the right place.\r\n                message.time += DEFAULT_TIME_STEP_MS;\r\n            }\r\n            // Format multi-character values by wrapping them with parentheses\r\n            if (value !== null && value !== undefined) {\r\n                if (value.constructor === Array) {\r\n                    // If value is an array, flatten it as a comma-delimited element (Ex: forkJoin())\r\n                    value = '(' + value.join(',') + ')';\r\n                }\r\n                else if (typeof value === 'object') {\r\n                    value = JSON.stringify(value);\r\n                }\r\n                // Convert other datatypes (boolean, numbers) to string values\r\n                value = value.toString();\r\n                if (value.length > 1 && ((value.charAt(0) !== '(') && value.charAt(value.length - 1) !== ')' &&\r\n                                        (value.charAt(0) !== '{') && value.charAt(value.length - 1) !== '}' )) {\r\n                    value = '(' + value + ')';\r\n                }\r\n            }\r\n            let delta = (message.time - lastTime) / DEFAULT_TIME_STEP_MS;\r\n\r\n            message.value.value = value;\r\n\r\n            for(let j = 0; j < delta - 1; ++j) {\r\n                output = output + '.';\r\n            }\r\n\r\n            lastTime = message.time;\r\n\r\n            if (!value) {\r\n                if (kind === 'N') {\r\n                    // Convert unhandled values to '?'\r\n                    value = '?';\r\n                }\r\n                else if (kind === 'E') {\r\n                    // Convert unhandled values to '?'\r\n                    value = '!';\r\n                }\r\n                else if (kind === 'C') {\r\n                    // Terminate sequence\r\n                    value = '|';\r\n                }\r\n                else {\r\n                    throw new Error('obsToStr received unknown element type: ' + kind);\r\n                }\r\n            }\r\n            output = output + value;\r\n        });\r\n\r\n        return output;\r\n    };\r\n\r\n    let transformArgument = function(testScheduler, props, elem) {\r\n        // Convert string arguments to observable sequences\r\n        // If argument is an object/function check whether it has a string property that should be converted as well\r\n        elem = (elem && elem._seqStr) || elem;\r\n        if (!props.argAsIs) {\r\n            if (typeof elem === 'string') {\r\n                if (props.numberArgAsTime) {\r\n                    elem = elem.length * DEFAULT_TIME_STEP_MS;\r\n                    props.numberArgAsTime = false;\r\n                }\r\n                else {\r\n                    elem = strToObs( elem, testScheduler, props);\r\n                }\r\n            }\r\n            else if (typeof elem === 'number') {\r\n                if (props.numberArgAsTime) {\r\n                    elem = elem * DEFAULT_TIME_STEP_MS;\r\n                    props.numberArgAsTime = false;\r\n                }\r\n            }\r\n        }\r\n        return elem;\r\n    };\r\n\r\n    let colorizeOutput = function(obsStr) {\r\n        if (obsStr) {\r\n            let tokens = obsStr.split('');\r\n            let colorFuncMap = {\r\n                '.': clc.redBright,\r\n                '|': clc.magentaBright,\r\n                '!': clc.magentaBright\r\n            };\r\n            return tokens.map(elem =>\r\n                (colorFuncMap[elem] || clc.cyanBright)(elem)\r\n            ).join('');\r\n        }\r\n        return obsStr;\r\n    };\r\n\r\n    // General purpose combine method\r\n    let combine = function(props) {\r\n        let that = this._self || this;\r\n        let rxOperationName = props.rxOperationName;\r\n        let rxOperation;\r\n        let args = arrayize(props.arguments);\r\n        let obs = Rx.Observable;\r\n        let obsStr;\r\n        let hasStaticMethod = Boolean(Rx.Observable[rxOperationName]);\r\n        let hasInstanceMethod = Boolean(Rx.Observable.prototype[rxOperationName]);\r\n        let isInstanceMethodOnly = hasInstanceMethod && !hasStaticMethod;\r\n        let seqStr = this && this._seqStr;\r\n\r\n        // Create a test scheduler to convert the strings to observable sequences\r\n        let testScheduler = new Rx.TestScheduler();\r\n\r\n        // Check whether a custom combinator is provided\r\n        if (props.combinator) {\r\n            args.push(props.combinator);\r\n        }\r\n\r\n        // Whether test scheduler should be added as another argument\r\n        if (props.addScheduler) {\r\n            args.push(testScheduler);\r\n        }\r\n\r\n        let transformArgs = (!isInstanceMethodOnly || props.hasSequence);\r\n\r\n        // Combine instance's value with other arguments\r\n        if (isInstanceMethodOnly) {\r\n            // Extract the stored sequence to support object-chaining\r\n            obs = strToObs( seqStr, testScheduler, props);\r\n            // Note: Some observable methods don't require arguments (e.g. sum)\r\n        }\r\n        else if (seqStr) {\r\n            // We extract the stored sequence from both the observable and instance in order to support object chaining\r\n            args.unshift(seqStr);\r\n        }\r\n\r\n        if (transformArgs) {\r\n            args = args.map(transformArgument.bind(undefined, testScheduler, props));\r\n        }\r\n\r\n        rxOperation = obs[rxOperationName];\r\n\r\n        obsStr = obsToStr(rxOperation.apply(obs, args), testScheduler, props);\r\n\r\n        let obj = _wrap.call(that, obsStr);\r\n        // Track operations for subsequent display() call\r\n        let history = this._history && this._history.slice(0) || [];\r\n        obj._history = history;\r\n        obj._history.push({\r\n            operation: props.rxOperationNameOriginal || rxOperationName,\r\n            arguments: arrayize(props.arguments),\r\n            output: obsStr\r\n        });\r\n\r\n        return obj;\r\n    };\r\n\r\n    let sumSelector = function(val) {\r\n        return 1;\r\n    };\r\n\r\n    let defaultCombinator = function() {\r\n        return '(' + Array.prototype.join.call(arguments, '') + ')';\r\n    };\r\n\r\n    let numberSelector = function(val) {\r\n        val = val || '';\r\n        val = _.trimLeft(val, '(');\r\n        val = _.trimRight(val, ')');\r\n        return Number(val);\r\n    };\r\n\r\n    let obj = {\r\n        from: function() {\r\n            let self = this;\r\n            let args = arrayize(arguments);\r\n            let str = args.join('');\r\n            return _wrap.call(self, str);\r\n        },\r\n        return: function(val) {\r\n            return Observable.return(val);\r\n        },\r\n\r\n        repeat: function(val, num) {\r\n            let self = this;\r\n            val = (val && val.toString()) || '';\r\n            if (val.length > 1 && (val.charAt(0) !== '(') && val.charAt(val.length - 1) !== ')') {\r\n                val = '(' + val + ')';\r\n            }\r\n            let str = _.repeat(val, num);\r\n            return _wrap.call(self, str);\r\n        },\r\n\r\n        // TODO: Consider replacing code below with TestScheduler-created observable (then call subscribe)\r\n        subscribe: function(onNext, onError, onCompleted) {\r\n            let str = this._seqStr;\r\n            if (str.indexOf('|') === -1) {\r\n                str = str + '|';\r\n            }\r\n            let listOfSets = strToGroupedList(str);\r\n            let skipRemaining = false;\r\n            listOfSets.forEach(function(elem) {\r\n                if (!skipRemaining) {\r\n                    if (elem === '!') {\r\n                        onError && onError(elem);\r\n                    }\r\n                    else if (elem === '|') {\r\n                        onCompleted && onCompleted(elem);\r\n                        skipRemaining = true;\r\n                    }\r\n                    else if (onNext) {\r\n                        onNext(elem);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        subscribeOnNext: function(onNext) {\r\n            this.subscribe(onNext);\r\n        },\r\n\r\n        subscribeOnError: function(onError) {\r\n            this.subscribe(null, onError);\r\n        },\r\n\r\n        subscribeOnCompleted: function(onCompleted) {\r\n            this.subscribe(null, null, onCompleted);\r\n        },\r\n\r\n        toString: function() {\r\n            return _.trimRight(this._seqStr, '|');\r\n        },\r\n\r\n        display: function() {\r\n            let history = this._history;\r\n            let operations = history.map(function (elem) {\r\n                    return {\r\n                        operation: clc.greenBright(elem.operation),\r\n                        arguments: colorizeOutput(JSON.stringify(elem.arguments)),\r\n                        output: colorizeOutput(elem.output)\r\n                    };\r\n                });\r\n\r\n            console.log('\\n' + columnify(operations, {\r\n                columns: ['operation', 'arguments', 'output']\r\n            }));\r\n\r\n            return history;\r\n        },\r\n\r\n        toArray: function() {\r\n            // Remove delays and termination elements\r\n            let result = this._seqStr.replace(/[\\|\\.\\!]+/g, '');\r\n            return result.split('');\r\n        }\r\n    };\r\n\r\n    let addFunction = function(opName, opProps) {\r\n        let self = this;\r\n        opProps = opProps || {};\r\n        self[opName] = function() {\r\n            return combine.call(this, extend({\r\n                rxOperationName: opName,\r\n                arguments: arguments\r\n            }, opProps));\r\n        };\r\n    };\r\n    addFunction = addFunction.bind(obj);\r\n\r\n    [\r\n        { name: 'amb' },\r\n        { name: 'and' },\r\n        { name: 'average', props: { combinator: numberSelector } },\r\n        { name: 'bufferWithCount' },\r\n        { name: 'bufferWithTime', props: { numberArgAsTime: true, addScheduler: true } },\r\n        { name: 'catch' },\r\n        { name: 'combineLatest', props: { mostRecentOnly: true, combinator: defaultCombinator } },\r\n        { name: 'concat' },\r\n        { name: 'count' },\r\n        { name: 'debounce', props: { addScheduler: true } },\r\n        { name: 'defaultIfEmpty' },\r\n        { name: 'distinct' },\r\n        { name: 'distinctUntilChanged' },\r\n        { name: 'do' },\r\n        { name: 'doOnCompleted' },\r\n        { name: 'doOnError' },\r\n        { name: 'doOnNext' },\r\n        { name: 'doWhile' },\r\n        { name: 'elementAt' },\r\n        { name: 'empty' },\r\n        { name: 'every' },\r\n        { name: 'filter' },\r\n        { name: 'finally' },\r\n        { name: 'find' },\r\n        { name: 'findIndex' },\r\n        { name: 'first' },\r\n        { name: 'flatMapLatest', props: { mostRecentOnly: true } },\r\n        { name: 'for' },\r\n        { name: 'forkJoin', props: { hasSequence: false } },\r\n        { name: 'generate', props: { argAsIs: true } },\r\n        { name: 'if' },\r\n        { name: 'ignoreElements' },\r\n        { name: 'isEmpty' },\r\n        { name: 'interval', props: { numberArgAsTime: true, addScheduler: true } },\r\n        { name: 'last' },\r\n        { name: 'let' },\r\n        { name: 'map' },\r\n        { name: 'max' },\r\n        { name: 'maxBy' },\r\n        { name: 'merge' },\r\n        { name: 'mergeDelayError' },\r\n        { name: 'min' },\r\n        { name: 'minBy' },\r\n        { name: 'onErrorResumeNext' },\r\n        { name: 'pairs' },\r\n        { name: 'pairwise' },\r\n        { name: 'partition' },\r\n        { name: 'pluck' },\r\n        { name: 'range' },\r\n        { name: 'reduce' },\r\n        { name: 'retry' },\r\n        { name: 'scan' },\r\n        { name: 'sample', props: { numberArgAsTime: true, addScheduler: true } },\r\n        { name: 'selectMany' },\r\n        { name: 'sequenceEqual', props: { hasSequence: true } },\r\n        { name: 'skip' },\r\n        { name: 'skipLast' },\r\n        { name: 'skipLastWithTime', props: { numberArgAsTime: true, addScheduler: true } },\r\n        { name: 'skipUntil', props: { hasSequence: true } },\r\n        { name: 'skipUntilWithTime', props: { numberAsTime: true, addScheduler: true } },\r\n        { name: 'skipWhile' },\r\n        { name: 'some' },\r\n        { name: 'start', props: { addScheduler: true } },\r\n        { name: 'startWith' },\r\n        { name: 'sum', props: { combinator: sumSelector } },\r\n        { name: 'switch' },\r\n        { name: 'take' },\r\n        { name: 'takeLast' },\r\n        { name: 'takeLastBuffer' },\r\n        { name: 'takeLastBufferWithTime', props: { numberArgAsTime: true, addScheduler: true } },\r\n        { name: 'takeLastWithTime', props: { numberArgAsTime: true, addScheduler: true } },\r\n        { name: 'takeUntil', props: { hasSequence: true } },\r\n        { name: 'takeUntilWithTime', props: { numberArgAsTime: true, addScheduler: true } },\r\n        { name: 'takeWhile' },\r\n        { name: 'throttle', props: { numberArgAsTime: true, addScheduler: true } },\r\n        { name: 'timeout', props: { hasSequence: true, numberArgAsTime: true, addScheduler: true } },\r\n        { name: 'timer', props: { numberArgAsTime: true, addScheduler: true } },\r\n        { name: 'timestamp', props: { addScheduler: true } },\r\n        { name: 'timeInterval', props: { addScheduler: true } },\r\n        { name: 'while' },\r\n        { name: 'windowWithCount', props: { argAsIs: true } },\r\n        { name: 'zip', props: { combinator: defaultCombinator } }\r\n\r\n    ].forEach(\r\n        opConfig => addFunction(opConfig.name, opConfig.props)\r\n    );\r\n\r\n    obj['addFunction'] = addFunction;\r\n\r\n    // Aliases\r\n    obj['flatMap'] = obj['selectMany'];\r\n    obj['select'] = obj['map'];\r\n    obj['of'] = obj['from'];\r\n    obj['forEach'] = obj['subscribe'];\r\n\r\n    obj['just'] = obj['from'];\r\n    obj['returnValue'] = obj['return'];\r\n\r\n    obj['where'] = obj['filter'];\r\n    obj['tap'] = obj['do'];\r\n    obj['tapOnNext'] = obj['doOnNext'];\r\n    obj['tapOnError'] = obj['doOnError'];\r\n    obj['tapOnCompleted'] = obj['doOnCompleted'];\r\n\r\n    // delay is essentially just a startWith() with a specified time period\r\n    obj['delay'] = function(val) {\r\n        if (typeof val === 'string') {\r\n            val = val.length;\r\n        }\r\n        val = _.fill(Array(val), '.').join('');\r\n\r\n        return combine.call(this, extend({\r\n            rxOperationName: 'startWith',\r\n            rxOperationNameOriginal: 'delay',\r\n            arguments: val\r\n        }, {\r\n            isInstanceMethodOnly: true\r\n        } ));\r\n    };\r\n\r\n    return obj;\r\n\r\n})();\r\n"],"sourceRoot":"U:\\proj\\rxify\\es6"}